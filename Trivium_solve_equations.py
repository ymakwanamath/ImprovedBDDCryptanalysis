
from pyeda import *
from pyeda.inter import *
import math
import random
import time
import matplotlib.pyplot as plt
import numpy as np
from pympler import asizeof

import sys


sys.setrecursionlimit(100000)
for i in range(288):
    exec("x{}=exprvar('x',{})".format(i,i))



def Intersection_Sol11(list1, list2):
    solutionset = list()
    for i in list1:

        for j in list2:

            tempsol = dict(i)

            check = True
            for x in tempsol.keys():
                if (x in j.keys()):
                    check = (tempsol[x] == j[x])
                    if (not check):
                        break

            if check:
                for x in j.keys():
                    tempsol.update({x: j[x]})

                solutionset.append(tempsol)
    return solutionset






def Intersection_Sol(list1, list2):
    solutionset = list()
    for i in range(len(list1)):

        for j in list2:

            tempsol = dict(list1[i])

            check = True
            for x in tempsol.keys():
                if (x in j.keys()):
                    check = (tempsol[x] == j[x])
                    if (not check):
                        break

            if check:
                for x in j.keys():
                    tempsol.update({x: j[x]})

                solutionset.append(tempsol)
    return solutionset


def RSANDSoln(bdd_list2):
    #print(bdd_list2)
    m = len(bdd_list2)
    #print("len is", m)
    if (m == 1):
        return bdd_list2[0]
        #print("m=1 ")
        #print("output value is")
        #print(bdd_list2)
       
        
    else:
        m1 = math.floor((m+1)/2)
        #print("m1 is ", m1)

        bddlist1 = list()
        for i in range(m1-1):
            bddlist1.append(Intersection_Sol(bdd_list2[i],  bdd_list2[m-i-1]))

        if (m % 2) == 1:
            bddlist1.append(bdd_list2[m1-1])
        else:
            bddlist1.append(Intersection_Sol(bdd_list2[m1-1] , bdd_list2[m1]))
        #print(bddlist1)
        return(RSANDSoln(bddlist1))

def Sequential_intersection(solution_list):
    #print("size of solution list is")
    #print(sys.getsizeof(solution_list))
    for i in range(len(solution_list)):
        print(len(solution_list[i]))
    solution_set1 = list(solution_list[0])
    #print(sol_set)
    for index in range(len(solution_list)-1):
        solution_set1 = Intersection_Sol(solution_set1, solution_list[index+1])
        print("size of intermediate solutions in step ", index)
        print(asizeof.asizeof(solution_set1))
        print(len(solution_set1))
    return solution_set1

def add_sequence_in_order(solution_list):
    n=len(solution_list)
    k=random.randint(1,n)
    # Step 2: Divide the sequence into subsets
    subsets = [solution_list[i:i + k] for i in range(0, n, k)]
    
    # Step 3: Add numbers within each subset
    subset_sums = [Sequential_intersection(subset) for subset in subsets]
    
    # Step 4: Add the sums of all subsets
    total_sum = Sequential_intersection(subset_sums)
    
    return total_sum

# Example usage




def Random_intersection(solution_list):


    n = len(solution_list) # Replace 10 with your desired number
    sequence = list(range(n))  # Create a list of numbers from 1 to n
    random.shuffle(sequence)  # Shuffle the list in place

    #print(sequence)  # Print the shuffled sequence
    solution=solution_list[sequence[0]]
    for i in range(n-1):
        solution=Intersection_Sol(solution, solution_list[sequence[i+1]])
    #print(solution)


def count_bdd_nodes(bdd_root):
    set_nodes=bdd_root.bfs()
    return(len(list(set_nodes)))


def RSANDbdd(bdd_list, file_obj):
    global max_nodes
    global max_size_bdd_onetime
    #print("size of each BDDD in BDD List at this stage is")
    file_obj.write("size of each BDDD in BDD List at this stage is \n")
    for i in bdd_list:
        #print("size in bytes is\n")
        #print(str(asizeof.asizeof(i)))
        #print("Number of Nodes are")
        bdd_nodes=count_bdd_nodes(i)
        print(bdd_nodes)
        if(bdd_nodes> max_nodes):
            max_nodes=bdd_nodes
        #file_obj.write("size in bytes is \n ")
        #file_obj.write(str(asizeof.asizeof(i))+'\n')
        #file_obj.write("Number of Nodes are \n ")
        #file_obj.write(str(bdd_nodes)+"\n")
    print("total size of complete BDD List at this stage is ")
    file_obj.write("total size of complete BDD List at this stage is \n")
    total_size_bdd=asizeof.asizeof(bdd_list)
    print(total_size_bdd)
    file_obj.write(str(total_size_bdd)+ "\n")
    if(total_size_bdd> max_size_bdd_onetime):
            max_size_bdd_onetime=total_size_bdd
    file_obj.write("total size of complete BDD List at this stage is \n")
    file_obj.write(str(total_size_bdd)+"\n")
    
    
    #print("Number of nodes are: ")
    #for bdd in bdd_list:
        #print("for bdd ")
        #print(count_bdd_nodes(bdd))
        
    #print(bdd_list2)
    m = len(bdd_list)
    #print(m)
    #print("len is", m)
    if (m == 1):
        return bdd_list[0]
        #print("m=1 ")
        #print("output value is")
        #print(bdd_list2)
       
        
    else:
        m1 = math.floor((m+1)/2)
        #print("m1 is ", m1)

        bddlist1 = list()
        for i in range(m1-1):
            bddlist1.append(bdd_list[i]&  bdd_list[m-i-1])


        if (m % 2) == 1:
            bddlist1.append(bdd_list[m1-1])
            
        else:
            bddlist1.append((bdd_list[m1-1] & bdd_list[m1]))
        #print("size of bddlist1 is")
        #print(asizeof.asizeof(bddlist1))
        #print(bddlist1)
        return(RSANDbdd(bddlist1, file))



'''
transformed_eqns = [eq.replace('*', '&').replace('+', '^') for eq in eqn_list_algebraic]
print(len(transformed_eqns))

x = {f'x{i}': exprvar(f'x{i}') for i in range(80)}

eqn_list=[]
for eq_str in transformed_eqns:
    eq_str = eq_str.replace('&', ' & ').replace('^', ' ^ ').replace('1', '1')
    eqn_list.append(eval(eq_str, x))


'''




print("equation list is")
#print(eqn_list)



eqn_list=[x12 ^ x14 ^ x18 ^ x5 ^ ~x0 ^ ~x14 ^ ~x9 ^ (x16 & x17) ^ (x11 & ~x10) ^ (x13 & ~x12) ^ (x7 & ~x8) ^ ~(x5 ^ (x3 & x4)) ^ ~(x9 ^ (x7 & x8)) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) ^ ((x10 ^ x19 ^ (x17 & x18) ^ (x8 & x9)) & ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))), x10 ^ x12 ^ x13 ^ x18 ^ x19 ^ ~x0 ^ ~x10 ^ ~x13 ^ ~x9 ^ (x16 & x17) ^ (x17 & x18) ^ (x2 & x3) ^ (x8 & x9) ^ (x11 & ~x10) ^ (x7 & ~x8) ^ (x9 & ~x8) ^ (~x11 & ~x12) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ((x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) & ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))), x15 ^ x18 ^ x3 ^ x6 ^ x9 ^ ~x0 ^ ~x10 ^ ~x12 ^ ~x9 ^ (x13 & x14) ^ (x16 & x17) ^ (x4 & x5) ^ (x10 & ~x11) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ ~(x3 ^ (x1 & x2)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~(x12 ^ (x10 & x11))) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) & (x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))), x11 ^ x12 ^ x17 ^ x18 ^ x2 ^ x8 ^ x9 ^ ~x0 ^ ~x10 ^ ~x9 ^ (x0 & x1) ^ (x10 & x9) ^ (x15 & x16) ^ (x16 & x17) ^ (x6 & x7) ^ (x10 & ~x9) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ ~(x2 ^ (x18 & x19)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) & ~(x15 ^ x6 ^ (x13 & x14) ^ (x4 & x5))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))), x12 ^ x16 ^ x18 ^ x9 ^ ~x0 ^ ~x1 ^ ~x10 ^ ~x9 ^ (x14 & x15) ^ (x16 & x17) ^ (x5 & x6) ^ (x8 & x9) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x8 & ~x9) ^ ~(x10 ^ ~x19) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(x19 ^ ~x1 ^ (x17 & x18)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) & ~(x15 ^ x6 ^ (x13 & x14) ^ (x4 & x5))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))), x0 ^ x12 ^ x7 ^ x9 ^ ~x10 ^ ~x18 ^ (x7 & x8) ^ (x11 & ~x10) ^ (x7 & ~x8) ^ (x9 & ~x8) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x15 ^ x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) & ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12)))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x14 ^ x18 ^ x7 ^ x9 ^ ~x0 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x12 & x13) ^ (x16 & x17) ^ (x3 & x4) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x8 ^ ~x17) ^ ~(x4 ^ (x2 & x3)) ^ ~(x8 ^ (x6 & x7)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) & ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12)))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x1 ^ x18 ^ x5 ^ x9 ^ ~x0 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x16 & x17) ^ (x18 & x19) ^ (x5 & x6) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x7 ^ ~x16) ^ ~(x10 ^ (x8 & x9)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ (~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) & ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11)))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x18 ^ x19 ^ x5 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x16 & x17) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x6 ^ ~x15) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ (x18 & x19 & (x19 ^ (x17 & x18))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8))) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ (~(x1 ^ ~(x10 ^ (x8 & x9))) & ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x18 ^ x5 ^ x7 ^ x8 ^ x9 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x16 & x17) ^ (x6 & x7) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(x5 ^ ~x14 ^ (x18 & x19)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ (~(x1 ^ ~(x10 ^ (x8 & x9))) & ~(~x0 ^ ~(x9 ^ (x7 & x8)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ~(x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17)))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x18 ^ x19 ^ x5 ^ x9 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x16 & x17) ^ (x17 & x18) ^ (x5 & x6) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x9 ^ (x7 & x8)) ^ ~(x1 ^ ~(x10 ^ (x8 & x9))) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x19 ^ (x18 & ~x17) ^ ~(x13 ^ x4)) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x8 ^ (x6 & x7)) & ~(~x0 ^ ~(x9 ^ (x7 & x8)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x12 ^ x18 ^ x3 ^ x5 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x9 ^ (x1 & x2) ^ (x16 & x17) ^ (x4 & x5) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x18 ^ (x16 & x17)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8))) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ~(x18 ^ x3 ^ ~x12 ^ (x16 & ~x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16))) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ((x7 ^ (x5 & x6)) & ~(x8 ^ (x6 & x7))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x15 ^ x17 ^ x18 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x13 & x14) ^ (x15 & x16) ^ (x16 & x17) ^ (x3 & x4) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x2 ^ (x0 & x1)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x8 ^ (x6 & x7)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x11 ^ x2 ^ ~x17 ^ (x16 & ~x15)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x15 ^ (x13 & x14)) & (x16 ^ (x14 & x15))) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x15 ^ x16 ^ x18 ^ x19 ^ x5 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x13 & x14) ^ (x16 & x17) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x14 & ~x15) ^ (~x18 & ~x19) ^ ~(x1 ^ ~x10) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ ~(x16 ^ x7 ^ ~x1 ^ (x14 & x15) ^ (x5 & x6) ^ ((x14 ^ (x12 & x13)) & (x15 ^ (x13 & x14))) ^ ((x6 ^ (x4 & x5)) & ~(x5 ^ (x3 & x4)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x15 ^ x18 ^ x5 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x15 ^ ~x18 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x13 & x14) ^ (x16 & x17) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x13 & ~x14) ^ (~x18 & ~x19) ^ ~(x3 ^ (x1 & x2)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x0 ^ ~x9) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ ~(~(~x12 ^ (x11 & ~x10)) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ (~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18)))) & (x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17))))) ^ ~(x0 ^ x15 ^ x6 ^ (x13 & x14) ^ (x4 & x5) ^ ((x14 ^ (x12 & x13)) & ~(x13 ^ (x11 & x12))) ^ ((x4 ^ (x2 & x3)) & ~(x5 ^ (x3 & x4)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))), x15 ^ x18 ^ x2 ^ x5 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x14 ^ ~x17 ^ ~x3 ^ ~x8 ^ ~x9 ^ (x0 & x1) ^ (x10 & x11) ^ (x13 & x14) ^ (x16 & x17) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x12 & ~x13) ^ (~x18 & ~x19) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ ~(x11 ^ (~x10 & ~x9) ^ ((~x9 ^ (x8 & ~x7)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ ~(~(~x12 ^ (x11 & ~x10)) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ (~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18)))) & (x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17))))) ^ ~(x14 ^ (x12 & x13) ^ ~(x5 ^ (x3 & x4)) ^ ((x4 ^ (x2 & x3)) & ~(x3 ^ (x1 & x2))) ^ (~(x12 ^ (x10 & x11)) & ~(x13 ^ (x11 & x12)))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))) ^ ((x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17)))) & (x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17))))), x15 ^ x18 ^ x19 ^ x4 ^ x5 ^ x6 ^ x9 ^ ~x1 ^ ~x10 ^ ~x13 ^ ~x16 ^ ~x3 ^ ~x9 ^ (x10 & x11) ^ (x13 & x14) ^ (x16 & x17) ^ (x2 & x3) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x9 & ~x8) ^ (~x11 & ~x12) ^ (~x18 & ~x19) ^ ~(x13 ^ (x11 & x12)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x10 ^ (x8 & ~x9)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x11 ^ (x10 & x9)) & ~(x12 ^ (x10 & x11))) ^ ((x2 ^ (x0 & x1)) & ~(x3 ^ (x1 & x2))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x9 ^ (x8 & ~x7)) & ~(x8 ^ (x18 & x19) ^ (~x6 & ~x7))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ ~(x11 ^ (~x10 & ~x9) ^ ((~x9 ^ (x8 & ~x7)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ ~(~(~x12 ^ (x11 & ~x10)) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ (~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18)))) & (x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17))))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))) ^ ((x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17)))) & (x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17))))) ^ ((x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17)))) & ~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16))))), x1 ^ x15 ^ x18 ^ x5 ^ x7 ^ x9 ^ ~x10 ^ ~x12 ^ ~x3 ^ ~x6 ^ (x10 & x11) ^ (x16 & x17) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x8 & ~x7) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x0 ^ ~x18) ^ ~(x10 ^ (x8 & x9)) ^ ~(x12 ^ (x10 & x11)) ^ ~(x3 ^ (x1 & x2)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ (~x1 & (x2 ^ (x0 & x1))) ^ (~x11 & ~(x10 ^ ~x19)) ^ ~(~x10 ^ (x8 & ~x9)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x9 ^ (x8 & ~x7)) & ~(x8 ^ (x18 & x19) ^ (~x6 & ~x7))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ (~(x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ ~(x11 ^ (~x10 & ~x9) ^ ((~x9 ^ (x8 & ~x7)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ ~(~(~x12 ^ (x11 & ~x10)) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ (~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ (~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18)))) & (x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17))))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))) ^ ((x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17)))) & (x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17))))) ^ ((x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17)))) & ~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16))))) ^ (~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16)))) & (x17 ^ (x15 & x16) ^ (x19 & ~x18) ^ ~(x2 ^ (x0 & x1)) ^ ((x15 ^ (x13 & x14)) & (x16 ^ (x14 & x15))))), x1 ^ x15 ^ x18 ^ x6 ^ x7 ^ x9 ^ ~x10 ^ ~x11 ^ ~x14 ^ ~x17 ^ ~x3 ^ (x10 & x11) ^ (x13 & x14) ^ (x16 & x17) ^ (x4 & x5) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x8 & ~x7) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x10 ^ (x8 & x9)) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x10 ^ (x8 & ~x9)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8))) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ (~(x10 ^ ~x19) & ~(x9 ^ ~x18)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x8 ^ (x18 & x19) ^ (~x6 & ~x7)) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x4 ^ (x2 & x3) ^ ~(x13 ^ (x11 & x12))) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x9 ^ (x8 & ~x7)) & ~(x8 ^ (x18 & x19) ^ (~x6 & ~x7))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ (~(x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ ~(x11 ^ (~x10 & ~x9) ^ ((~x9 ^ (x8 & ~x7)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ ~(~(~x12 ^ (x11 & ~x10)) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x11 ^ x2 ^ (x0 & x1) ^ (x10 & x9) ^ (x0 & ~x1) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ (~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18)))) & (x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17))))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))) ^ ((x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17)))) & (x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17))))) ^ ((x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17)))) & ~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16))))) ^ (~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16)))) & (x17 ^ (x15 & x16) ^ (x19 & ~x18) ^ ~(x2 ^ (x0 & x1)) ^ ((x15 ^ (x13 & x14)) & (x16 ^ (x14 & x15))))) ^ (~(x16 ^ x19 ^ ~x1 ^ (x14 & x15) ^ (~x17 & ~x18) ^ ((x14 ^ (x12 & x13)) & (x15 ^ (x13 & x14)))) & (x17 ^ (x15 & x16) ^ (x19 & ~x18) ^ ~(x2 ^ (x0 & x1)) ^ ((x15 ^ (x13 & x14)) & (x16 ^ (x14 & x15))))), x1 ^ x15 ^ x17 ^ x18 ^ x4 ^ x5 ^ x6 ^ x7 ^ x8 ^ x9 ^ ~x1 ^ ~x10 ^ ~x13 ^ ~x16 ^ ~x17 ^ ~x19 ^ ~x3 ^ (x10 & x11) ^ (x13 & x14) ^ (x16 & x17) ^ (x4 & x5) ^ (x6 & x7) ^ (x1 & ~x2) ^ (x11 & ~x10) ^ (x8 & ~x7) ^ (x9 & ~x8) ^ (~x18 & ~x19) ^ ~(x10 ^ ~x19) ^ ~(x4 ^ (x2 & x3)) ^ ~(x9 ^ (x7 & x8)) ^ ~(~x10 ^ (x8 & ~x9)) ^ ~(~x14 ^ (x13 & ~x12)) ^ ((x8 ^ ~x17) & ~(x9 ^ ~x18)) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8))) ^ ~(x2 ^ ~x17 ^ (~x15 & ~x16)) ^ ~(~x0 ^ ~x9 ^ (x8 & ~x7)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x3 & x4)) ^ ~(x16 ^ x7 ^ (x14 & x15) ^ (x5 & x6)) ^ ~(x17 ^ x8 ^ (x15 & x16) ^ (x6 & x7)) ^ ((x7 ^ (x5 & x6)) & (x8 ^ (x6 & x7))) ^ ~(x8 ^ (x18 & x19) ^ (~x6 & ~x7)) ^ ~(~x18 ^ ~x3 ^ (~x16 & ~x17)) ^ ~(x11 ^ x2 ^ (x10 & x9) ^ (x1 & ~x0)) ^ ~(x14 ^ x5 ^ (x12 & x13) ^ (x4 & ~x3)) ^ ~(x15 ^ ~x6 ^ (x13 & x14) ^ (x4 & x5)) ^ ((x11 ^ (x10 & x9)) & ~(x10 ^ (x8 & x9))) ^ ((x3 ^ (x1 & x2)) & ~(x2 ^ (x0 & x1))) ^ ((x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~((x0 & ~x1) ^ ~(x2 ^ (x0 & x1))) ^ ~(x3 ^ (x1 & x2) ^ ~(x12 ^ (x10 & x11))) ^ ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6)) ^ (~(x10 ^ (x8 & x9)) & ~(x9 ^ (x7 & x8))) ^ (~(x8 ^ (x6 & x7)) & ~(x9 ^ (x7 & x8))) ^ ~(x7 ^ (x5 & ~x6) ^ ~(x16 ^ (x14 & x15))) ^ ~(x1 ^ x10 ^ x19 ^ ~x0 ^ (x17 & x18) ^ (x8 & x9)) ^ (~(~x19 ^ ~x6) & (x5 ^ (~x18 & ~x19))) ^ ~(x4 ^ (~x2 & ~x3) ^ ~(x13 ^ (x11 & x12))) ^ ~(~x8 ^ (x7 & ~x6) ^ ~(x17 ^ (x15 & x16))) ^ ((x11 ^ (x10 & x9)) & (~x0 ^ ~(x12 ^ (x10 & x11)))) ^ ((x13 ^ (x11 & ~x12)) & ~(~x12 ^ (x11 & ~x10))) ^ (~(x8 ^ (x6 & x7)) & ~(x7 ^ (x18 & x19) ^ (x5 & x6))) ^ ~(~x0 ^ ~(x9 ^ (x7 & x8) ^ ~(x18 ^ (x16 & x17)))) ^ ~(x7 ^ (x5 & x6) ^ ((x5 ^ (x3 & x4)) & (x6 ^ (x4 & x5)))) ^ ~(~x2 ^ (x1 & ~x0) ^ ~(x11 ^ (x10 & x9) ^ (x18 & x19))) ^ ~(x6 ^ (x4 & x5) ^ ((x5 ^ (x3 & x4)) & ~(x4 ^ (x2 & x3)))) ^ ((~x9 ^ (x8 & ~x7)) & ~(x8 ^ (x18 & x19) ^ (~x6 & ~x7))) ^ ((~x0 ^ ~x15 ^ (x13 & ~x14)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & (~x1 ^ ~x16 ^ (~x14 & ~x15))) ^ ((~x0 ^ ~(x12 ^ (x10 & x11))) & ~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12)))) ^ ((~x19 ^ ~x4 ^ (~x17 & ~x18)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17))) ^ ((x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ~(x13 ^ (x11 & ~x12) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x12 ^ (x11 & ~x10)))) ^ (~(x7 ^ (x18 & x19) ^ (x5 & x6)) & ~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18))))) ^ (~(x8 ^ (x18 & x19) ^ (~x6 & ~x7)) & ~(x19 ^ ~x7 ^ (x17 & x18) ^ (x5 & ~x6))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ((x16 ^ ~x4 ^ (x14 & x15) ^ (x2 & ~x3)) & ~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4))) ^ ~(x11 ^ (x9 & ~x10) ^ ~(x8 ^ (x6 & x7) ^ ((x6 ^ (x4 & x5)) & (x7 ^ (x5 & x6))))) ^ ~(x11 ^ (~x10 & ~x9) ^ ((~x9 ^ (x8 & ~x7)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(~x0 ^ ~x1 ^ ~(x13 ^ (x11 & x12))) & ~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1))) ^ (~(x14 ^ x2 ^ (x12 & x13) ^ (~x0 & ~x1)) & ~(x15 ^ ~x3 ^ (x13 & x14) ^ (x2 & ~x1))) ^ ~(~x0 ^ ~x15 ^ (x13 & ~x14) ^ ((x13 ^ (x11 & ~x12)) & ~(~x14 ^ (x13 & ~x12)))) ^ ((x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~(~x12 ^ (x11 & ~x10)) ^ ((x11 ^ (~x10 & ~x9)) & ~(~x10 ^ (x8 & ~x9)))) ^ (~(x17 ^ x5 ^ (x15 & x16) ^ (~x3 & ~x4)) & ~(~x6 ^ (x5 & ~x4) ^ ~(x18 ^ (x16 & x17)))) ^ ~(~x1 ^ ~x16 ^ (~x14 & ~x15) ^ (~(~x14 ^ (x13 & ~x12)) & (~x0 ^ ~x15 ^ (x13 & ~x14)))) ^ ~(~x8 ^ (x7 & ~(~x19 ^ ~x6)) ^ ~(x5 ^ (x3 & x4) ^ ((x3 ^ (x1 & x2)) & ~(x4 ^ (x2 & x3))))) ^ ~(x1 ^ ~x19 ^ ~x4 ^ (~x17 & ~x18) ^ (~(x2 ^ ~x17 ^ (~x15 & ~x16)) & ~(~x18 ^ ~x3 ^ (~x16 & ~x17)))) ^ (~(x6 ^ (x4 & x5) ^ (x18 & x19 & (x19 ^ (x17 & x18)))) & (x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17))))) ^ ~(~(~x19 ^ ~x6) ^ ~(x3 ^ (x1 & x2) ^ (~x1 & ~(x2 ^ (x0 & x1)))) ^ ((x5 ^ (~x18 & ~x19)) & (~x19 ^ ~x4 ^ (~x17 & ~x18)))) ^ ((x5 ^ (x18 & x19) ^ (x3 & x4) ^ ((x19 ^ (x17 & x18)) & ~(x18 ^ (x16 & x17)))) & (x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17))))) ^ ((x19 ^ (x17 & x18) ^ ~(x4 ^ (x2 & x3)) ^ ((x17 ^ (x15 & x16)) & ~(x18 ^ (x16 & x17)))) & ~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16))))) ^ (~(x19 ^ x3 ^ (x1 & x2) ^ ~(x18 ^ (x16 & x17)) ^ ((x16 ^ (x14 & x15)) & (x17 ^ (x15 & x16)))) & (x17 ^ (x15 & x16) ^ (x19 & ~x18) ^ ~(x2 ^ (x0 & x1)) ^ ((x15 ^ (x13 & x14)) & (x16 ^ (x14 & x15))))) ^ (~(x16 ^ x19 ^ ~x1 ^ (x14 & x15) ^ (~x17 & ~x18) ^ ((x14 ^ (x12 & x13)) & (x15 ^ (x13 & x14)))) & ~(x0 ^ x15 ^ ~x18 ^ (x13 & x14) ^ (~x16 & ~x17) ^ ((x14 ^ (x12 & x13)) & ~(x13 ^ (x11 & x12))))) ^ (~(x16 ^ x19 ^ ~x1 ^ (x14 & x15) ^ (~x17 & ~x18) ^ ((x14 ^ (x12 & x13)) & (x15 ^ (x13 & x14)))) & (x17 ^ (x15 & x16) ^ (x19 & ~x18) ^ ~(x2 ^ (x0 & x1)) ^ ((x15 ^ (x13 & x14)) & (x16 ^ (x14 & x15)))))]


start_normal=time.time()

final_eqn=eqn_list[0]
#print(final_eqn)
for i in range(len(eqn_list)-1):
    final_eqn=final_eqn&eqn_list[i+1]
    #print(final_eqn)
sol=final_eqn.satisfy_all()
end_normal=time.time()

print("Normally time taken is ")
print(end_normal-start_normal)


file=open("Space_analysis_output.txt", 'a')
file.write("\n \n \n ")
file.write("-----------------------------------------------------------------------------------------------------------"+ "\n \n")

max_nodes=0
max_size_bdd_onetime=0

start_bdd_anding=time.time()
bdd_list = list()
for i in range(len(eqn_list)):
    bdd_list.append(expr2bdd(eqn_list[i]))
    #print("bdd done in iteration no. ")
    #print(i)


final_bdd= RSANDbdd(bdd_list, file,)
file.write("\n The maximum size of BDDlist( in byte ) is \n")
file.write(str(max_size_bdd_onetime)+"\n")
#print("final_bdd formed")
solution=final_bdd.satisfy_all()
#print("final solution is ")
print(list(solution))
#print("final solution size is")
#print(asizeof.asizeof(solution))
end_bdd_anding=time.time()
print("process 1 completed")
file.write("process BDD ANDing completed\n \n ")
print('time taken by bdd_anding like harish sahu paper is ')
time_bdd_anding=end_bdd_anding-start_bdd_anding
print(time_bdd_anding)
#final_bdd=RSANDbdd(bdd_list)
#solution_bdd=final_bdd.satisfy_all()

##########################################################################################################################   

max_solutions=0
max_size_solution_onetime=0
start_sequential=time.time()
#bdd_list = list()
#for i in range(len(eqn_list)):
    #bdd_list.append(expr2bdd(eqn_list[i]))
    #print("bdd generated")
    #print(i)
file.write("Sequential ANDing Start \n ")

sol1=list(expr2bdd(eqn_list[0]).satisfy_all())
for i in range(len(bdd_list)-1):
    sol2=list(expr2bdd(eqn_list[i+1]).satisfy_all())
    #file.write("Solutions from the bdd is \n")
    #file.write("\n"+str(list(sol2))+"\n")
    print("size of next solution is ")
    print(asizeof.asizeof(sol2))
    file.write("size of next solution is \n ")
    file.write(str(asizeof.asizeof(sol2))+ "\n")
    size_solution_onetime=asizeof.asizeof(sol1)+asizeof.asizeof(sol2)
    if(size_solution_onetime> max_size_solution_onetime):
            max_size_solution_onetime=size_solution_onetime
    sol1=Intersection_Sol11(sol1, sol2)
    
    print("size in bytes at intermeditate step no. {} is ".format(i))
    print(asizeof.asizeof(sol1))
    #file.write("Value of sol1 is ")
    #file.write(str(list(sol1))+ '\n')
    print("number of solutions in the set at this intermediate step  is ")
    print(len(sol1))
    num_sol_in_set=len(sol1)
    if(num_sol_in_set>max_solutions):
        max_solutions=num_sol_in_set
   # file.write(str(list(sol2))+ "\n")
    #file.write(str(len(list(sol2)))+ "\n")
    #file.write(str(len(sol1)))
    #file.write("size in bytes at intermeditate step no. {} is ".format(i)+ "\n")
    #file.write(str(asizeof.asizeof(sol1))+ "\n")
    #file.write("number of solutions in the set at this intermediate step  is "+"\n")
    #file.write(str(len(sol1))+ "\n")
    
    #print("solution list done for iteration ")
    #print(i)
    #Find all solutions to each bdd. 
    print(sol1)
end_sequential=time.time()

print("Time taken by sequential intersection is")
time_sequential=end_sequential-start_sequential
print(time_sequential)
print("process 2 completed")
file.write("Process 2 completed \n \n ")

file.write("Final Results are: \n")
file.write("Maximum number of nodes in a single BDD is \n")
file.write(str(max_nodes)+"\n")
file.write("square of nodes is \n ")
file.write(str(max_nodes*max_nodes)+"\n")
file.write("Maximum size in bytes of complete Bdd list at a single time is \n  ")
file.write(str(max_size_bdd_onetime)+"\n")
file.write("Maximum number of solutions in a single solution list is \n ")
file.write(str(max_solutions)+"\n")
file.write("Maximum size in bytes of solutions to be kept at single time is \n ")
file.write(str(max_size_solution_onetime)+"\n")


file.write("##########################################################################################################"+"\n \n ")
file.close()



file=open("Final_Results_Space_Analysis.txt", 'a')
file.write("\n -------------------------------------------------------------------------------------------------------------\n")
file.write("No. of variables= \n  ")
file.write("No. of equations= \n ")
file.write("No. of rounds= \n  ")

file.write("Final Results are: \n")
file.write("Maximum number of nodes in a single BDD is \n")
file.write(str(max_nodes)+"\n")
file.write("Maximum size in bytes of complete Bdd list at a single time is \n  ")
file.write(str(max_size_bdd_onetime)+"\n")
file.write("Maximum number of solutions in a single solution list is \n ")
file.write(str(max_solutions)+"\n")
file.write("Maximum size in bytes of solutions to be kept at single time is \n ")
file.write(str(max_size_solution_onetime)+"\n")

file.write("-------------------------------------------------------------------------------------------------")

file.close()
#################################################################################################################


'''
start_Random_intersection=time.time()


bdd_list = list()
for i in range(len(eqn_list)):
    bdd_list.append(expr2bdd(eqn_list[i]))
sol_list = list()
#Find all solutions to each bdd. 

for i in range(len(bdd_list)):
    sol_list.append(list(bdd_list[i].satisfy_all()))
Random_intersection(sol_list)
end_Random_intersection=time.time()
print("process 3 completed")

print("Time taken by Random intersection is")
time_Random_intersection=end_Random_intersection-start_Random_intersection
print(time_Random_intersection)
############################################################################################################
start_RSAND_sol=time.time()


bdd_list = list()
for i in range(len(eqn_list)):
    bdd_list.append(expr2bdd(eqn_list[i]))



sol_list = list()
#Find all solutions to each bdd. 
for i in range(len(bdd_list)):
    sol_list.append(list(bdd_list[i].satisfy_all()))
RSANDSoln(sol_list)
end_RSAND_sol=time.time()
print("process 4 completed")

print("Time taken by Recursive symmetric intersection is")
time_Recursive_symmetric=end_RSAND_sol-start_RSAND_sol
print(time_Recursive_symmetric)

####################################################################################################
start_in_order=time.time()


bdd_list = list()
for i in range(len(eqn_list)):
    bdd_list.append(expr2bdd(eqn_list[i]))



sol_list = list()
#Find all solutions to each bdd. 
for i in range(len(bdd_list)):
    sol_list.append(list(bdd_list[i].satisfy_all()))
add_sequence_in_order(sol_list)
end_in_order=time.time()

print("process 5 completed")
##########################################################################################################33












print("time taken by intersection in order")
time_intersection_in_order=end_in_order-start_in_order
print(time_intersection_in_order)
# Data to plot

time_taken_in_iteration=[time_sequential, time_Random_intersection, time_Recursive_symmetric, time_bdd_anding, time_intersection_in_order]
Time_taken_array.append(time_taken_in_iteration)

# Data to plot
#values = [time_taken_in_iteration]  # Replace these with your own values
#labels = ['sequential, random, recursive, bdd_anding, in order']  # Labels for the bars

# Create a figure and axis with a sleek aspect ratio
#fig, ax = plt.subplots(figsize=(8, 5))

# Use a well-balanced color palette
#colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']  # Blue, Orange, Green, Red

# Create the bar graph with edge color for a sharp appearance
#bars = ax.bar(labels, values, color=colors, edgecolor='black', linewidth=1.2)

# Add data labels on top of each bar with a smaller, subtle font
#for bar in bars:
    #yval = bar.get_height()
    #ax.text(bar.get_x() + bar.get_width()/2, yval + 0.5, f'{yval}', 
            #ha='center', va='bottom', fontsize=10, color='#2C3E50', fontweight='medium')

# Add a minimalist title and axis labels with consistent font
#ax.set_title('Aesthetic Bar Graph of Values', fontsize=16, fontweight='bold', pad=15, color='#2C3E50')
#ax.set_xlabel('Categories', fontsize=13, fontweight='medium', labelpad=10, color='#2C3E50')
#ax.set_ylabel('Values', fontsize=13, fontweight='medium', labelpad=10, color='#2C3E50')

# Customize the grid to be subtle and non-intrusive
#ax.grid(True, which='major', axis='y', linestyle='--', linewidth=0.6, alpha=0.5)
#ax.set_axisbelow(True)

# Remove unnecessary spines and add a slight border to remaining ones
#ax.spines['top'].set_visible(False)
#ax.spines['right'].set_visible(False)
#ax.spines['left'].set_linewidth(0.8)
#ax.spines['bottom'].set_linewidth(0.8)

# Set background to white for clarity in print and digital formats
#ax.set_facecolor('#FFFFFF')

# Apply tight layout for balanced spacing
#plt.tight_layout()

# Show the plot
#plt.show()
'''